#pragma TextEncoding = "UTF-8"
#pragma rtGlobals=3		// Use modern global access method and strict wave access.

//=========================================================================================================//
//											 NTNU NanoESCA lab procedures									
//=========================================================================================================//

// Inspired by pre-existing NanoESCA code written by A. Locatelli. T. O. Mentes and G. Zamborlini, Elettra 2016
// All new and customized code written by Håkon Røst, NTNU. Last update 06/04/2021

// First, include all relevant procedure files:

#include ":ESCAloader" 				// Loads images and image stacks, properly scaling them as igor waves
#include ":ESCAbackground"			// Generate Darkfield (DF) images and corrected MCP flat fields
#include ":ESCAStackPanel"			// Display image stack and slice out E vs. k profiles
#include ":ESCAImgPanel"			// Display NanoESCA single images, edit contrast + colors
#include ":ESCAdispersivePanel"	// Slice out EDCs and MDCs from an ARPES E v. K plot generated by the stack panel
#include ":ESCACCDMaskPanel"		// Generate ROI mask that excludes counts form outside the MCP region

// Finally, assemble the NanoESCA procedures menu

Menu "ESCAlab"
	"Allocate global variables folder", Assemble_ESCAglobals()
	"Import NanoESCA files as .ibw", Init_ESCALoader()
	SubMenu "Background corrections"
	"Generate darkfield (CCD) background", ESCA_generateDF()
	"Define new flatfield (MCP) background", ESCA_defineFF()
	"Generate CCD mask", Init_ESCACCDPanel()
	"Perform background correction on NE data", ESCA_CorrectWaves()
	"Remove hot pixels caused by bckg. corrections", ESCA_removeHot()
	End
	SubMenu "Plot and Slice"
	"Open image panel", Init_ESCAImgPanel()
	"Open image stack slice panel", Init_ESCAStackPanel()
	"Open EDC and MDC slice panel", Init_DCslicePanel()
	End
	
End

// Allocates a separate "globals" folder and the key relevant global variables
Function Assemble_ESCAglobals()

	NewDataFolder/O/S root:ESCAglobals // make separate folder for global variables

	// Initialize global variables for loading and displaying waves
	String/g dataType = "Single Image"
	String/g dataFormat = ".tif"
	String/g dataDest
	String/g dataPathStr
	String/g lastImageStr
	String/g image_minrange
	String/g image_maxrange
	
	Variable/g darkField
	Variable/g normalize
	
	// Initialize global variables with info related to the version of igor and operating system
	String/g platform = IgorInfo(2)
	Variable/g Igor_version = IgorVersion()
	
	SetDataFolder root: // reset current directory to root
	Return 0
End
